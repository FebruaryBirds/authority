<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.dao.RoleMapper">
    <resultMap id="baseResultMap" type="com.system.entity.RoleEntity">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="TINYINT"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="createUser" column="create_user" jdbcType="BIGINT"/>
        <result property="updateUser" column="update_user" jdbcType="BIGINT"/>
        <result property="deleted" column="deleted" jdbcType="TINYINT"/>
    </resultMap>


    <insert id="insert" parameterType="com.system.entity.RoleEntity">
        insert into role (parent_id, code, name, type, remark,create_time, update_time, create_user, update_user, deleted)
        values(#{parentId, jdbcType = INTEGER},
               #{code,jdbcType = VARCHAR},
               #{name ,jdbcType = VARCHAR},
               #{type ,jdbcType = TINYINT},
               #{remark ,jdbcType = VARCHAR},
               #{createTime ,jdbcType = TIMESTAMP},
               #{updateTime ,jdbcType = TIMESTAMP},
               #{createUser ,jdbcType = BIGINT},
               #{updateUser ,jdbcType = BIGINT},
               #{deleted ,jdbcType = TINYINT}
              )
    </insert>

    <update id="update" parameterType="com.system.entity.RoleEntity">
        update role
        <trim prefix="set" suffixOverrides=",">
            <if test="parentId != null">parent_id=#{parentId},</if>
            <if test="code != null">code=#{code},</if>
            <if test="name != null">name=#{name},</if>
            <if test="type != null">type=#{type},</if>
            <if test="remark != null">remark=#{remark},</if>
            <if test="updateTime != null">update_time=#{updateTime},</if>
            <if test="updateUser != null">update_user=#{updateUser},</if>
        </trim>
        where id = #{id, jdbcType = INTEGER}
    </update>

    <select id="getById" parameterType="java.lang.Integer" resultMap="baseResultMap">
        select id,parent_id, code, name, type, remark, create_time, update_time, create_user, update_user,deleted
        from role where id = #{id}
    </select>

    <select id="getByParam" parameterType="java.util.Map" resultMap="baseResultMap">
        select id,parent_id, code, name, type, remark, create_time, update_time, create_user, update_user,deleted
        from role
        where deleted = 0
        <if test="id!=null">
            and id = #{id}
        </if>
        <if test="name!=null and name!=''">
            and name = #{name}
        </if>
        <if test="code!=null and code!=''">
            and code = #{code}
        </if>
    </select>

    <select id="getByParentId" resultMap="baseResultMap" parameterType="java.lang.Integer">
        select id,parent_id, code, name, type, remark, create_time, update_time, create_user, update_user,deleted
        from role where parent_id #{parentId}
    </select>

    <delete id="delete" parameterType="java.util.List">
        update role set deleted = 1 where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="list" parameterType="java.util.Map" resultMap="baseResultMap">
        select id,parent_id, code, name, type, remark, create_time, update_time, create_user, update_user,deleted
        from role
        where deleted = 0
        <if test="id!=null">
            and id = #{id}
        </if>
        <if test="name!=null and name!=''">
            and name = #{name}
        </if>
        <if test="code!=null and code!=''">
            and code = #{code}
        </if>
        <if test="parentId!=null and parentId!=''">
            and parent_id = #{parentId}
        </if>
    </select>

</mapper>